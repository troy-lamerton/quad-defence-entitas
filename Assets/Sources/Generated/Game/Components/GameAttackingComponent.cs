//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity attackingEntity { get { return GetGroup(GameMatcher.Attacking).GetSingleEntity(); } }
    public AttackingComponent attacking { get { return attackingEntity.attacking; } }
    public bool hasAttacking { get { return attackingEntity != null; } }

    public GameEntity SetAttacking(int newDirection, int newState, int newInitState) {
        if(hasAttacking) {
            throw new Entitas.EntitasException("Could not set Attacking!\n" + this + " already has an entity with AttackingComponent!",
                "You should check if the context already has a attackingEntity before setting it or use context.ReplaceAttacking().");
        }
        var entity = CreateEntity();
        entity.AddAttacking(newDirection, newState, newInitState);
        return entity;
    }

    public void ReplaceAttacking(int newDirection, int newState, int newInitState) {
        var entity = attackingEntity;
        if(entity == null) {
            entity = SetAttacking(newDirection, newState, newInitState);
        } else {
            entity.ReplaceAttacking(newDirection, newState, newInitState);
        }
    }

    public void RemoveAttacking() {
        DestroyEntity(attackingEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackingComponent attacking { get { return (AttackingComponent)GetComponent(GameComponentsLookup.Attacking); } }
    public bool hasAttacking { get { return HasComponent(GameComponentsLookup.Attacking); } }

    public void AddAttacking(int newDirection, int newState, int newInitState) {
        var index = GameComponentsLookup.Attacking;
        var component = CreateComponent<AttackingComponent>(index);
        component.direction = newDirection;
        component.state = newState;
        component.initState = newInitState;
        AddComponent(index, component);
    }

    public void ReplaceAttacking(int newDirection, int newState, int newInitState) {
        var index = GameComponentsLookup.Attacking;
        var component = CreateComponent<AttackingComponent>(index);
        component.direction = newDirection;
        component.state = newState;
        component.initState = newInitState;
        ReplaceComponent(index, component);
    }

    public void RemoveAttacking() {
        RemoveComponent(GameComponentsLookup.Attacking);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttacking;

    public static Entitas.IMatcher<GameEntity> Attacking {
        get {
            if(_matcherAttacking == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Attacking);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttacking = matcher;
            }

            return _matcherAttacking;
        }
    }
}
